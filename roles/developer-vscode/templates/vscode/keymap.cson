# Your keymap
#
# vscode keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, vscode keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from vscode's built-in keymap:
#
# 'vscode-text-editor':
#   'enter': 'editor:newline'
#
# 'vscode-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://vscode.io/docs/latest/using-vscode-basic-customization#customizing-key-bindings
# * https://vscode.io/docs/latest/behind-vscode-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson
'.workspace':
  'cmd-shift-c': 'github:stage-and-commit'
  'ctrl-shift-p': 'github:push'

'.github-Panel':
  'shift-enter': 'github:commit'
  'cmd-shift-d': 'github:discard-all-changes'

'.github-StagingView':
  'shift-c': 'github:commit'
  'c': 'github:commit'
  's': 'core:confirm'
  'u': 'core:confirm'
  'shift-s': 'github:stage-all-changes'
  'shift-u': 'github:unstage-all-changes'

'vscode-text-editor.vim-mode:not(.insert-mode)':
  'g q': 'autoflow:reflow-selection'

'vscode-text-editor.vim-mode.operator-pending-mode, vscode-text-editor.vim-mode.visual-mode':
  'g q': 'autoflow:reflow-selection'
